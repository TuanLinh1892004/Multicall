{
  "address": "0xcC4c712dadeA7C7Bf2Fe0eb6634D3f4f66705184",
  "abi": [
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "multicall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xdbf82fd6cb87dbe4e6d576fae067d0b86b29dc47b2df9f421c9af33cc82a1012",
  "receipt": {
    "to": null,
    "from": "0xBE7D5B7dB24Fa7fCAE1Abf18d50F410c4adfe460",
    "contractAddress": "0xcC4c712dadeA7C7Bf2Fe0eb6634D3f4f66705184",
    "transactionIndex": 0,
    "gasUsed": "306186",
    "logsBloom": "0x
    "blockHash": "0xf8f79db4f1876d1c826de489e44b49fb76a0406be8fa2cb1b1e1a0ee536a3eb2",
    "transactionHash": "0xdbf82fd6cb87dbe4e6d576fae067d0b86b29dc47b2df9f421c9af33cc82a1012",
    "logs": [],
    "blockNumber": 36268237,
    "cumulativeGasUsed": "306186",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "4cbe53fb65cf693c72d0565c1fd5f9cb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"multicall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/evm/Multicall.sol\":\"Multicall\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/evm/Multicall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8;\\r\\n\\r\\ncontract Multicall {\\r\\n    struct Call {\\r\\n        address receiver;\\r\\n        uint256 value;\\r\\n        bytes data;\\r\\n    }\\r\\n\\r\\n    function multicall(Call[] memory calls) external payable {\\r\\n        for (uint256 i = 0; i < calls.length; i++) {\\r\\n            bool success;\\r\\n            if (calls[i].value > 0) {\\r\\n                (success,) = calls[i].receiver.call{value: calls[i].value}(calls[i].data);\\r\\n            } else {\\r\\n                (success,) = calls[i].receiver.call(calls[i].data);\\r\\n            }\\r\\n            \\r\\n            require(success, string(abi.encodePacked(\\\"Multicall failed at tx \\\", _toString(i))));\\r\\n        }\\r\\n        if (address(this).balance > 0) {\\r\\n            (bool ok,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n            require(ok, \\\"transfer failed\\\");\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _toString(uint256 value) internal pure returns (string memory str) {\\r\\n        assembly {\\r\\n            let m := mload(0x40)\\r\\n            str := add(m, 0x20)\\r\\n            let end := str\\r\\n\\r\\n            for { let temp := value } 1 {} {\\r\\n                str := sub(str, 1)\\r\\n                mstore8(str, add(48, mod(temp, 10)))\\r\\n                temp := div(temp, 10)\\r\\n                if iszero(temp) { break }\\r\\n            }\\r\\n\\r\\n            let length := sub(end, str)\\r\\n            str := sub(str, 0x20)\\r\\n            mstore(str, length)\\r\\n            mstore(0x40, add(end, 0x20))\\r\\n        }\\r\\n    }\\r\\n\\r\\n    fallback() external payable {}\\r\\n    receive() external payable {}\\r\\n}\",\"keccak256\":\"0xcdcf6f4d34ee64edc82b2d7884f0c75ed98ac48f30a13203906e47534e14a6df\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60808060405234601557610492908161001b8239f35b600080fdfe60806040526004361015610010575b005b60003560e01c631749e1e30361000e576020366003190112610159576004356001600160401b03811161015957366023820112156101595760048101356001600160401b03811161015e578060051b9160405191610071602085018461018f565b825260246020830193820101903682116101595760248101935b82851061009b5761000e846102e5565b84356001600160401b038111610159578201906060602319833603011261015957604051916100c983610174565b60248101356001600160a01b03811681036101595783526044810135602084015260648101356001600160401b0381116101595760249101019036601f830112156101595781359261011a846101b2565b610127604051918261018f565b84815236602086860101116101595760006020868197828098018386013783010152604082015281520194019361008b565b600080fd5b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761015e57604052565b601f909101601f19168101906001600160401b0382119082101761015e57604052565b6001600160401b03811161015e57601f01601f191660200190565b80518210156101e15760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b3d15610222573d90610208826101b2565b91610216604051938461018f565b82523d6000602084013e565b606090565b60005b83811061023a5750506000910152565b818101518382015260200161022a565b9061025d60209282815194859201610227565b0190565b156102695750565b6044604051809262461bcd60e51b8252602060048301526102998151809281602486015260208686019101610227565b601f01601f19168101030190fd5b156102ae57565b60405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b9060005b82518110156103f5576001906000602061030383876101cd565b510151156103b857506103b261039f600080610330610322868a6101cd565b51516001600160a01b031690565b602061033c878b6101cd565b51015190604061034c888c6101cd565b51015191602083519301915af16103616101f7565b505b6103ad61036f8561041b565b60405176026bab63a34b1b0b636103330b4b632b21030ba103a3c1604d1b6020820152938491603783019061024a565b03601f19810184528361018f565b610261565b016102e9565b61039f816103b2926103cd610322868a6101cd565b60406103d9878b6101cd565b5101519082602083519301915af16103ef6101f7565b50610363565b509050476103ff57565b610419600080808047335af16104136101f7565b506102a7565b565b90604051600a602082015b600019019360308282060185530492831561044357600a90610426565b925060409060208482030193601f19019384520160405256fea264697066735822122052f6319442749be431acda47cb4c590604ec2c308e3b48f773580bbafe466a6164736f6c634300081c0033",
  "deployedBytecode": "0x60806040526004361015610010575b005b60003560e01c631749e1e30361000e576020366003190112610159576004356001600160401b03811161015957366023820112156101595760048101356001600160401b03811161015e578060051b9160405191610071602085018461018f565b825260246020830193820101903682116101595760248101935b82851061009b5761000e846102e5565b84356001600160401b038111610159578201906060602319833603011261015957604051916100c983610174565b60248101356001600160a01b03811681036101595783526044810135602084015260648101356001600160401b0381116101595760249101019036601f830112156101595781359261011a846101b2565b610127604051918261018f565b84815236602086860101116101595760006020868197828098018386013783010152604082015281520194019361008b565b600080fd5b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761015e57604052565b601f909101601f19168101906001600160401b0382119082101761015e57604052565b6001600160401b03811161015e57601f01601f191660200190565b80518210156101e15760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b3d15610222573d90610208826101b2565b91610216604051938461018f565b82523d6000602084013e565b606090565b60005b83811061023a5750506000910152565b818101518382015260200161022a565b9061025d60209282815194859201610227565b0190565b156102695750565b6044604051809262461bcd60e51b8252602060048301526102998151809281602486015260208686019101610227565b601f01601f19168101030190fd5b156102ae57565b60405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b9060005b82518110156103f5576001906000602061030383876101cd565b510151156103b857506103b261039f600080610330610322868a6101cd565b51516001600160a01b031690565b602061033c878b6101cd565b51015190604061034c888c6101cd565b51015191602083519301915af16103616101f7565b505b6103ad61036f8561041b565b60405176026bab63a34b1b0b636103330b4b632b21030ba103a3c1604d1b6020820152938491603783019061024a565b03601f19810184528361018f565b610261565b016102e9565b61039f816103b2926103cd610322868a6101cd565b60406103d9878b6101cd565b5101519082602083519301915af16103ef6101f7565b50610363565b509050476103ff57565b610419600080808047335af16104136101f7565b506102a7565b565b90604051600a602082015b600019019360308282060185530492831561044357600a90610426565b925060409060208482030193601f19019384520160405256fea264697066735822122052f6319442749be431acda47cb4c590604ec2c308e3b48f773580bbafe466a6164736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}